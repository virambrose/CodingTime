import javafx.fxml.FXML;
import javafx.fxml.FXML;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.layout.*;
import javafx.scene.Parent;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.paint.Color;
import javafx.scene.control.TextField;
import javafx.scene.Parent;
import javafx.scene.control.Button;
import javafx.scene.paint.Paint;
import javafx.stage.Stage;
import javafx.scene.Scene;

import javafx.scene.text.Text;
import java.io.IOException;
import javafx.stage.Stage;




public class mainMenuController {
import java.io.IOException;
    @FXML
public class Main extends Application{
    public TextField pathDirectory;
import java.util.ArrayList;
    public Button directory;
    @Override
    @FXML
import java.util.Map;
    public void buttonClicked() throws IOException {
    public void start(Stage primaryStage) throws Exception{
        String dir = pathDirectory.getText();


        FXMLLoader loader = new FXMLLoader();
        Stage insertionSortStage = new Stage();
public class controller {
        FXMLLoader loader = new FXMLLoader();
        loader.setLocation(getClass().getResource("mainMenu.fxml"));
        loader.setLocation(getClass().getResource("similarityChecker.fxml"));
    @FXML
        Parent insertRoot = loader.load();
        Parent root = loader.load();
        controller correlationMatrixController = loader.getController();
    private GridPane correlationMatrix;
        correlationMatrixController.setPath(dir);
        primaryStage.setScene(new Scene(root, 600, 500));
        correlationMatrixController.printTable();
    private String path;
        insertionSortStage.setTitle("Similarity Checker");
        primaryStage.show();
        insertionSortStage.setScene(new Scene(insertRoot, 1000, 500));

        insertionSortStage.show();
    }
    }
    public void setPath(String path){
}

        this.path = path;
    public static void main(String[] args) {
    }
        launch(args);

    }
    @FXML
}
   public void initialize() throws IOException {
    }

    public void printTable() throws IOException {
        int row = 1;
        programSimilarityChecker test =  new programSimilarityChecker(path);
        ArrayList<StackPane> names = new ArrayList<>();
        names.add(new StackPane(new Text("Scores")));
        for (String name : test.crossCompare().keySet()) {
            names.add(new StackPane(new Text(name)));
        }
        StackPane[] nameList = new StackPane[names.size()];
        names.toArray(nameList);
        correlationMatrix.addRow(row++, nameList);
        for (Map.Entry<String, ArrayList<Double>> entry1 : test.crossCompare().entrySet()) {
            String name = entry1.getKey();
            ArrayList<Double> scores = entry1.getValue();
            ArrayList<Pane> scorePanes = new ArrayList<>();
            Pane namePane = new StackPane();
            namePane.getChildren().add(new Text(name));
            scorePanes.add(namePane);
            for (Double score : scores){
                Pane newPane = new StackPane();
                newPane.setBackground(new Background(new BackgroundFill(Color.color(score / 100, 1 - (score / 100), 0), null,null)));
                newPane.getChildren().add(new Text(String.format("%.2f", score)));
                scorePanes.add(newPane);
            }

            Pane[] scorePaneArray = new Pane[scorePanes.size()];
            scorePanes.toArray(scorePaneArray);
            correlationMatrix.addRow(row++, scorePaneArray);
        }
    }
}
